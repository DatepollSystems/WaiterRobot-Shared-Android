name: Publish Android

on:
  workflow_call:

jobs:
  publish-android:
    concurrency:
      group: publish-android-${{ github.ref_name }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Extract keystore
        run: |
          cd androidApp
          echo "${{ secrets.KEYS_TAR_ASC }}" > .keys.tar.gz.asc
          gpg -d --passphrase "${{ secrets.KEYS_PASSPHRASE }}" --batch .keys.tar.gz.asc > .keys.tar.gz
          tar xzf .keys.tar.gz
          cd ..

      - name: Release Android
        if: ${{ github.ref_name == 'main' }}
        run: ./gradlew publishProdReleaseApps --no-daemon -PkeyPassword=${{ secrets.KEY_PASSWORD }} -PstorePassword=${{ secrets.STORE_PASSWORD }} -PremoteBuild=true -PGITHUB_PACKAGES_USERNAME=cirunner -PGITHUB_PACKAGES_PASSWORD=${{ secrets.GITHUB_TOKEN }}
        env:
          GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3g"

      - name: Release Android Lava
        if: ${{ github.ref_name != 'main' }}
        run: ./gradlew publishLavaReleaseApps --no-daemon -PkeyPassword=${{ secrets.KEY_PASSWORD }} -PstorePassword=${{ secrets.STORE_PASSWORD }} -PremoteBuild=true -PGITHUB_PACKAGES_USERNAME=cirunner -PGITHUB_PACKAGES_PASSWORD=${{ secrets.GITHUB_TOKEN }}
        env:
          GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3g"

      - name: Add version to env
        run: |
          echo "ANDROID_VERSION=$(cat androidApp/build/version.tag) >> $GITHUB_ENV
          echo "VERSION_TAG=android/$ANDROID_VERSION" >> $GITHUB_ENV

      - name: Create version tag ${{ env.VERSION_TAG }}
        run: |
          git tag ${{ env.VERSION_TAG }}
          git push origin ${{ env.VERSION_TAG }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Android ${{ env.ANDROID_VERSION }}
          tag_name: ${{ env.VERSION_TAG }}
          prerelease: ${{ github.ref_name != 'main' }}
          generate_release_notes: true


      # TODO auto increase androidPatch in version.properties (on prod build only) and push (to dev branch, republish must be prevented then)?

      # TODO add discord or other notification
